
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARROW COMMA DIVIDE ELSE EQUAL FLOAT FUN GEQ GREATER IDENTIFIER IF LBRACE LEQ LESS LET LPAREN MATCH MINUS MOD NEQ NOT NUMBER OR PLUS RBRACE RPAREN SEMICOLON STRING THEN TIMES WITHexpression : LET IDENTIFIER EQUAL expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : NUMBERexpression : IDENTIFIERexpression : LPAREN expression RPAREN'
    
_lr_action_items = {'LET':([0,5,6,7,8,9,16,],[2,2,2,2,2,2,2,]),'NUMBER':([0,5,6,7,8,9,16,],[4,4,4,4,4,4,4,]),'IDENTIFIER':([0,2,5,6,7,8,9,16,],[3,10,3,3,3,3,3,3,]),'LPAREN':([0,5,6,7,8,9,16,],[5,5,5,5,5,5,5,]),'$end':([1,3,4,12,13,14,15,17,18,],[0,-7,-6,-2,-3,-4,-5,-8,-1,]),'PLUS':([1,3,4,11,12,13,14,15,17,18,],[6,-7,-6,6,6,6,6,6,-8,6,]),'MINUS':([1,3,4,11,12,13,14,15,17,18,],[7,-7,-6,7,7,7,7,7,-8,7,]),'TIMES':([1,3,4,11,12,13,14,15,17,18,],[8,-7,-6,8,8,8,8,8,-8,8,]),'DIVIDE':([1,3,4,11,12,13,14,15,17,18,],[9,-7,-6,9,9,9,9,9,-8,9,]),'RPAREN':([3,4,11,12,13,14,15,17,18,],[-7,-6,17,-2,-3,-4,-5,-8,-1,]),'EQUAL':([10,],[16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,5,6,7,8,9,16,],[1,11,12,13,14,15,18,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> LET IDENTIFIER EQUAL expression','expression',4,'p_assignment','parser.py',10),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',15),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',16),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',17),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',18),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',23),
  ('expression -> IDENTIFIER','expression',1,'p_expression_identifier','parser.py',28),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',33),
]
